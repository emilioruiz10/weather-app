<div class="relative w-72">
	<input
		id="search-input"
		type="text"
		placeholder="Search..."
		class="w-full rounded-full border-2 border-black bg-white px-6 py-2 text-lg whitespace-nowrap placeholder-gray-600 focus:outline-none"
	/>
	<div
		id="autocomplete-list"
		class="absolute top-full left-0 z-50 mt-1 hidden max-h-40 w-72 overflow-y-auto rounded-md border border-gray-300 bg-white shadow-lg"
	>
	</div>
</div>

<script>
	const searchInput = document.getElementById("search-input");
	const list = document.getElementById("autocomplete-list");

	const debounce = (func, delay) => {
		let timeoutId;
		return function (...args) {
			clearTimeout(timeoutId);
			timeoutId = setTimeout(() => func.apply(this, args), delay);
		};
	};

	const fetchAutoCompleteList = async (query) => {
		if (!query.trim()) return;
		const response = await fetch(`https://api.radar.io/v1/search/autocomplete?query=${query}&layers=locality&limit=5`, {
			method: "GET",
			headers: { Authorization: import.meta.env.PUBLIC_RADAR_API_KEY },
		});

		if (!response.ok) {
			console.error("Radar error:", response.statusText);
			return;
		}

		const { addresses } = await response.json();
		list.innerHTML = "";

		if (!addresses.length) {
			list.classList.add("hidden");
			return;
		}

		addresses.forEach((city) => {
			const item = document.createElement("div");
			item.className = "px-4 py-2 cursor-pointer hover:bg-blue-100 transition-colors";
			item.textContent = city.formattedAddress;
			item.addEventListener("click", () => {
				searchInput.value = city.addressLabel;
				list.classList.add("hidden");
				searchInput.dispatchEvent(
					new CustomEvent("locationSelected", {
						detail: {
							location: city.formattedAddress,
							lat: city.latitude,
							lng: city.longitude,
						},
						bubbles: true,
					})
				);
			});
			list.appendChild(item);
		});

		list.classList.remove("hidden");
	};

	searchInput.addEventListener(
		"input",
		debounce((e) => fetchAutoCompleteList(e.target.value), 500)
	);
</script>
